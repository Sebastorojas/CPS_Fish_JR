UNIVERSIDAD SANTO TOMAS
FINAL PROJECT OF INTRODUCTION TO ARTIFICAL INTELIGENCE
BY JUAN SEBASTIAN ROJAS AGUILAR

PROBLEMA:

En la empresa de pesca JR hay un área de mantenimiento que se encarga de mantener todas las máquinas en funcionamiento. Para ello, se debe planificar el mantenimiento de cada máquina. Sin embargo, hay un problema en este proceso. El problema es que no es posible que el área de mantenimiento sepa qué máquinas requieren una parada o una reparación en el momento en que es necesario
Para resolver esto, tendrá un pasante en cada área, donde se encargará de realizar el mantenimiento preventivo de las máquinas, actualizar el currículum y las reparaciones de estas y, finalmente, generar informes a los supervisores del área de mantenimiento en caso de que haya una máquina. Eso requiere reparación. Esta es también una manera para que los profesionales en su forma de estudiante entiendan todo el proceso de la planta y no se queden en un solo lugar.

FUNDAMENTOS TEORICOS
Problemas de satisfacción de restricciones.
Son problemas los cuales tienen un conjunto de variables especificas dentro de un proceso, en este proceso se deben cumplir unas restricciones específicas, se empieza a estudiar en el año 1970 y fue avanzando como un tema importante en la investigación o logística de operaciones y la inteligencia artificial.
Se basan en la búsqueda combinatoria de una solución que satisfaga todas las restricciones que tienen las variables del proceso. Algunos grandes ejemplos de los algoritmos de satisfacción de restricciones mas conocido por sus siglas en ingles CPS seria: 

-	Problema de las ocho reinas
-	Teorema de los cuatro colores o más conocido como coloración de mapas
-	Answer set programming 
Solo por nombrar algunos de los tantos problemas que se puede solucionar o todas las aplicaciones que pueden tener, estos problemas pueden bastante complicados o muy sencillos. Como pueden dar una solución que cumpla con todas las restricciones también puede retornar una respuesta que diga que la organización de las entradas no puede cumplir todas las restricciones. Algunas de las principales aplicaciones de los CPS son la asignación de recursos y el planteamiento de soluciones organizacionales.
Para una definición técnica de un problema CPS se debe hablar de 3 partes normalmente expresado como (X, D, C) los cuales tienen el siguiente significado
X Son todas las variables del sistema, estas variables son la base de todo, existen problemas los cuales tendrán variables dinámicas ingresadas por un usuario o adquiridas del exterior o variables ya establecidas en el programa
D Como las variables deben agruparse, inicializarse o organizarse de tal forma que se cumplan las restricciones se deberá tener una lista de posibles estados faltantes para cada variable, llamada dominio pues como alguna de sus definiciones lo dice, dominio es donde puede existir por ende esto representa los valores que aun puede llegar a tomar la variable.
Estos dominios pueden ser infinitos o finitos, para problemas de organización se utilizan dominios finitos.
C Esta son las restricciones, pueden ser de varios tipos como lo son unitarias, binarias o de orden superior. Para problemas de organización se utilizan normalmente restricciones unitarias y binarias las cuales pueden ser definidas como:
-	Las restricciones unitarias solo afectan una variable estas van destinadas a la asignación de un valor a esa variable como, por ejemplo

Variable: Cielo
Restricción: Cielo=Azul
La restricción en este caso dice que el cielo tiene que se azul y no podrá ser de otro color 

-	Las restricciones Binarias afectan a mas de dos variables como, por ejemplo:
Variables= lugar de trabajo de juan, lugar de trabajo de Carlos.
Restricción: Lugar de trabajo de juan = lugar de trabajo de Carlos
La restricción dice que ambos deben estar en el mismo lugar de trabajo pues ya existe una relación de trabajo entre ambos.

Para resolver un problema CPS de deben tener en cuenta 2 cosas, la primera es llamada arc consistency la cual significa ir eliminando los valores posibles de los dominios de cada variable cada ves que se valla asignando un valor. Por ejemplo:
Variables: A, B y C
Restricción: A=B y C diferente a A
Dominios:
A = 1,2,3
B= 1,2,3
C=1,2,3



Interacción 1:

A=2

Dominios aplicando arc consistency

A = 2
B= 2
C=1,3


Lo otro que se debe tener en cuenta es seguir la estrategia de backtrack-search el cual dice que en cada interacción se debe asignar un valor a una variable, esta forma puede ser en orden o aleatoriamente. Después de la asignación se debe verificar todas las restricciones que puede tener esa asignación, si llegado el caso ninguna se cumple se podrá realizar el arc consistency, si no es el caso no se reducirán dominios y se escogerá otra asignación para la variable.


DIAGRAMA DE FLUJO

Por favor vea la imagen Flow diagram

Technical specifications

ESPECIFICACIONES TECNICAS DEL PROYECTO


Para aplicar el CPS al problema se tendrán las siguientes consideraciones.

-	Los dominios serán finitos.
-	Las restricciones serán binarias.

Variables:

Las variables se podrán ingresar por medio de un archivo .xml el cual podrá editar el supervisor del área de mantenimiento, El podrá escoger entre 7 nombres los cuales son:

-	Carolina
-	Sebastian
-	Gonzales
-	Juana
-	Andrés
-	Santiago
-	Antonio

Restricciones:

Por favor ver la imagen Constrains.

Ejemplo de funcionamiento:

1.	Ingreso de nombres - ver la imagen Names_Entry_EX1
2.	Iteraciones hasta llegar a respuesta  Ver documento Iterations_EX1
3.	Horario graficado con solución  Ver imagen Schedule_EX1


Link de youtube:


INSTRUCCIONES PARA EJECUTAR EL PROYECTO
Por favor vaya al archivo Instruciones.txt.


RECURSOS

-	http://hrudnick.sitios.ing.uc.cl/paperspdf/Gil.pdf 
-	https://scielo.conicyt.cl/scielo.php?pid=S0718-221X2001000100006&script=sci_arttext 
-	http://repositorio.ufpso.edu.co:8080/dspaceufpso/bitstream/123456789/1609/3/30122.pdf 
-	https://cstopics.github.io/cstopics/artificial-intelligence/CSP/csp 
-	Kolaitis, Phokion G.; Vardi, Moshe Y. (2000). «Conjunctive-Query Containment and Constraint Satisfaction». Journal of Computer and System Sciences 61 


